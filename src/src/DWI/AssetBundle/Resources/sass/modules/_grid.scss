//
// Grid based on Semangtic.gs - (http://semantic.gs/)
// ----------------------------------------------------

// Config
// --------------------------------------------------

$column-width: 60px;
$gutter-width: 20px;
$columns: 12;


// Functions
// --------------------------------------------------

@function gridsystem-width($columns:$columns) {
    @return ($column-width * $columns) + ($gutter-width * ($columns - 1));
}

$total-width: gridsystem-width($columns);


// Mixins
// --------------------------------------------------

@mixin clearfix() {
    *zoom:1;

    &:before,
    &:after {
        content:"";
        display:table;
    }
    &:after {
        clear:both;
    }
}


// Grid
// --------------------------------------------------

body {
    width: 100%;
    @include clearfix();
}

@mixin row($columns:$columns) {
    display: block;
    width: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns));
    margin: 0 $total-width*((($gutter-width*.5)/gridsystem-width($columns))*-1);
    @include clearfix();
}

@mixin column($x,$columns:$columns) {
    display: inline;
    float: left;
    width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns));
    margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@mixin push($offset:1) {
    margin-left: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@mixin pull($offset:1) {
    margin-right: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}
